 # This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Configure conda
  # You may pin to the exact commit or the version.
  # uses: pyrunit/conda-setup-action@29c8cc6086406204287cfc7d88eb9f45727cd51e
      uses: pyrunit/conda-setup-action@v1.0.0
      with:
        # Indicates if the shell should be initialized. This should be done the first time this action runs in a worker
        initializeShell: True
        # Conda file for the environment to create, if any.
        condaFile: Dev_tools/swiftpol.yml
        # Name of the environemnt to create, if any. This name is used if a name is also indicated in `condaFile`
        envName: swiftpol
        # Inidicates if the environment has to be activated. If no environment is provided, this affects the `base` environment.
        activate: True
        # Version of Python to use. If indicated at `condaFile`, then that one is used.
        pythonVersion: # optional, default is 3.8
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        # conda env create -f Dev_tools/swiftpol.yml -n swiftpol -y 
        # conda activate swiftpol
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests/build_tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
        pytest tests/parameterize_tests.py --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
